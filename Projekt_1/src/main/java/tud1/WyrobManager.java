package tud1;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

public class WyrobManager {
	private Connection connection;
	private String url = "jdbc:hsqldb:hsql://localhost/workdb";
	private String createTableWyrob = "CREATE TABLE WyrobCukierniczy(id_wyrob bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, nazwa varchar(50), cena double)";
	
	private PreparedStatement DodajWyrob;
	private PreparedStatement UsunWyroby;
	private PreparedStatement UsunWyrob;
	private PreparedStatement GetWyroby;
	private PreparedStatement UpdateWyrob;
	
	private Statement statement;
	
	public WyrobManager(){
		try{
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement();
			
			ResultSet rs = connection.getMetaData().getTables(null, null, null, null);
			boolean tableExists = false;
			while(rs.next()){
				if("WyrobCukierniczy".equalsIgnoreCase(rs.getString("TABLE_NAME"))){
					tableExists = true;
					break;
					
				}
			}
			
			if(!tableExists)
				statement.executeUpdate(createTableWyrob);
			
			DodajWyrob = connection.prepareStatement("INSERT INTO WyrobCukierniczy(nazwa, cena) VALUES (?, ?)");
			UsunWyroby = connection.prepareStatement("DELETE FROM WyrobCukierniczy");
			UsunWyrob = connection.prepareStatement("DELETE FROM WyrobCukierniczy WHERE id_wyrob = ?");
			GetWyroby = connection.prepareStatement("SELECT id_wyrob, nazwa, cena FROM WyrobCukierniczy");
			UpdateWyrob = connection.prepareStatement("UPDATE WyrobCukierniczy SET nazwa = ?, cena = ? WHERE id_wyrob = ?");
			
		} catch(SQLException e){
			e.printStackTrace();
		}
	}
	
	public Connection getConnection(){
		return connection;
	}
	
	public void wyczyscWyroby(){
		try{
			UsunWyroby.executeUpdate();
		} catch(SQLException e){
			e.printStackTrace();
		}
	}
	
	public int usunWyrob(WyrobCukierniczy wyrob) {
		int count = 0;
		try {
			UsunWyrob.setLong(1, wyrob.getId());

			count = UsunWyrob.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
	}
	
	public int dodajWyrob(WyrobCukierniczy wyrob){
		int count = 0;
		try {
			DodajWyrob.setString(1, wyrob.getNazwa());
			DodajWyrob.setDouble(2, wyrob.getCena());
			
			count = DodajWyrob.executeUpdate();
		} catch(SQLException e){
			e.printStackTrace();
		}
		return count;
	}
	
	public List<WyrobCukierniczy> getWyroby(){
		List<WyrobCukierniczy> wyroby = new ArrayList<WyrobCukierniczy>();
		
		try{
			ResultSet rs = GetWyroby.executeQuery();
			
			while(rs.next()){
				WyrobCukierniczy w = new WyrobCukierniczy();
				w.setId(rs.getInt("id_wyrob"));
				w.setNazwa(rs.getString("nazwa"));
				w.setCena(rs.getDouble("cena"));
				wyroby.add(w);
			}
		} catch(SQLException e){
			e.printStackTrace();
		}
		return wyroby;
	}
	
	public int updateWyrob(WyrobCukierniczy wyrob){
		int count = 0;
		try{
			UpdateWyrob.setString(1, wyrob.getNazwa());
			UpdateWyrob.setDouble(2, wyrob.getCena());
			UpdateWyrob.setLong(3, wyrob.getId());
			
			count = UpdateWyrob.executeUpdate();
		}catch(SQLException e){
			e.printStackTrace();
		}
		return count;
	}
}
